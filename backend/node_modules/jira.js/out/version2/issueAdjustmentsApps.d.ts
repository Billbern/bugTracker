import * as Models from './models';
import * as Parameters from './parameters';
import { Callback } from '../callback';
import { Client } from '../clients';
export declare class IssueAdjustmentsApps {
    private client;
    constructor(client: Client);
    /**
     * @deprecated Gets issue adjustments. Issue adjustments can only be retrieved by Forge apps.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    getIssueAdjustments<T = Models.PageIssueAdjustmentDetails>(parameters: Parameters.GetIssueAdjustments | undefined, callback: Callback<T>): Promise<void>;
    /**
     * @deprecated Gets issue adjustments. Issue adjustments can only be retrieved by Forge apps.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    getIssueAdjustments<T = Models.PageIssueAdjustmentDetails>(parameters?: Parameters.GetIssueAdjustments, callback?: never): Promise<T>;
    /**
     * @deprecated Creates an issue adjustment. Issue adjustment can only be created by Forge apps.
     *
     *   Each app can define up to 100 issue adjustments. Each issue adjustment can define up to 1000 contexts.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     *   - _None_ if the issue adjustment is created without contexts.
     *   - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the
     *       issue adjustment is created with contexts.
     */
    createIssueAdjustment<T = Models.IssueAdjustmentIdentifiers>(parameters: Parameters.CreateIssueAdjustment | undefined, callback: Callback<T>): Promise<void>;
    /**
     * @deprecated Creates an issue adjustment. Issue adjustment can only be created by Forge apps.
     *
     *   Each app can define up to 100 issue adjustments. Each issue adjustment can define up to 1000 contexts.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     *   - _None_ if the issue adjustment is created without contexts.
     *   - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the
     *       issue adjustment is created with contexts.
     */
    createIssueAdjustment<T = Models.IssueAdjustmentIdentifiers>(parameters?: Parameters.CreateIssueAdjustment, callback?: never): Promise<T>;
    /**
     * @deprecated Updates an issue adjustment. Issue adjustment can only be updated by Forge apps.
     *
     *   Each issue adjustment can define up to 1000 contexts.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     *   - _None_ if the issue adjustment is created without contexts.
     *   - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the
     *       issue adjustment is created with contexts.
     */
    updateIssueAdjustment<T = void>(parameters: Parameters.UpdateIssueAdjustment, callback: Callback<T>): Promise<void>;
    /**
     * @deprecated Updates an issue adjustment. Issue adjustment can only be updated by Forge apps.
     *
     *   Each issue adjustment can define up to 1000 contexts.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     *   - _None_ if the issue adjustment is created without contexts.
     *   - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the
     *       issue adjustment is created with contexts.
     */
    updateIssueAdjustment<T = void>(parameters: Parameters.UpdateIssueAdjustment, callback?: never): Promise<T>;
    /**
     * @deprecated Deletes an issue adjustment. All the contexts that belong to the issue adjustment are deleted too.
     *   Issue adjustment can only be deleted by Forge apps.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    deleteIssueAdjustment<T = void>(parameters: Parameters.DeleteIssueAdjustment, callback: Callback<T>): Promise<void>;
    /**
     * @deprecated Deletes an issue adjustment. All the contexts that belong to the issue adjustment are deleted too.
     *   Issue adjustment can only be deleted by Forge apps.
     *
     *   **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    deleteIssueAdjustment<T = void>(parameters: Parameters.DeleteIssueAdjustment, callback?: never): Promise<T>;
}
