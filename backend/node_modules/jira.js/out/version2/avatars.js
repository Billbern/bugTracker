"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Avatars = void 0;
const tslib_1 = require("tslib");
class Avatars {
    constructor(client) {
        this.client = client;
    }
    getAllSystemAvatars(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/avatar/${parameters.type}/system`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvatars(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/type/${parameters.type}/owner/${parameters.entityId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    storeAvatar(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/type/${parameters.type}/owner/${parameters.entityId}`,
                method: 'POST',
                params: {
                    x: parameters.x,
                    y: parameters.y,
                    size: parameters.size,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteAvatar(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/type/${parameters.type}/owner/${parameters.owningObjectId}/avatar/${parameters.id}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvatarImageByType(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/view/type/${parameters.type}`,
                method: 'GET',
                params: {
                    size: parameters.size,
                    format: parameters.format,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvatarImageByID(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/view/type/${parameters.type}/avatar/${parameters.id}`,
                method: 'GET',
                params: {
                    size: parameters.size,
                    format: parameters.format,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvatarImageByOwner(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/universal_avatar/view/type/${parameters.type}/owner/${parameters.entityId}`,
                method: 'GET',
                params: {
                    size: parameters.size,
                    format: parameters.format,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.Avatars = Avatars;
//# sourceMappingURL=avatars.js.map