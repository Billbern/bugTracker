"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectAvatars = void 0;
const tslib_1 = require("tslib");
class ProjectAvatars {
    constructor(client) {
        this.client = client;
    }
    updateProjectAvatar(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/avatar`,
                method: 'PUT',
                data: {
                    id: parameters.id,
                    owner: parameters.owner,
                    isSystemAvatar: parameters.isSystemAvatar,
                    isSelected: parameters.isSelected,
                    isDeletable: parameters.isDeletable,
                    fileName: parameters.fileName,
                    urls: parameters.urls,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteProjectAvatar(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/avatar/${parameters.id}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createProjectAvatar(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/avatar2`,
                method: 'POST',
                params: {
                    x: parameters.x,
                    y: parameters.y,
                    size: parameters.size,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAllProjectAvatars(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/avatars`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ProjectAvatars = ProjectAvatars;
//# sourceMappingURL=projectAvatars.js.map